name: Build & Publish Docker Image

on:
  workflow_dispatch:
    inputs:
      tags:
        description: "Array of docker image tags to build and push separated by commas"
        required: true
        default: "latest"
      destination:
        description: "Docker image destination"
        required: true
        type: choice
        default: "dockerhub"
        options:
          - dockerhub
          - ghcr

jobs:
  build-and-publish:
    name: Build and Publish Docker Image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}

      - name: Print latest commit
        run: echo "Latest commit: $(git rev-parse HEAD)"

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        if: ${{ github.event.inputs.destination == 'dockerhub' }}
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN }}

      - name: Login to GitHub Container Registry
        if: ${{ github.event.inputs.destination == 'ghcr' }}
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        run: |
          docker buildx create --use

          IFS=',' read -r -a tags <<< "${{ github.event.inputs.tags }}"
          tag_args=""
          for tag in "${tags[@]}"; do
            if [ "${{ github.event.inputs.destination }}" == "dockerhub" ]; then
              tag_args="$tag_args -t eduardolat/pgbackweb:$tag"
            else
              tag_args="$tag_args -t ghcr.io/${{ github.repository_owner }}/pgbackweb:$tag"
            fi
          done

          docker buildx build \
            --platform linux/amd64,linux/arm64 \
            $tag_args \
            -f ./docker/Dockerfile \
            --push .
